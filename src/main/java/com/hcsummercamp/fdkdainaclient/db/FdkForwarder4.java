/*
 * This file is generated by jOOQ.
 */
package com.hcsummercamp.fdkdainaclient.db;


import com.hcsummercamp.fdkdainaclient.db.tables.BaseBusinessInfo;
import com.hcsummercamp.fdkdainaclient.db.tables.PlatformSku;
import com.hcsummercamp.fdkdainaclient.db.tables.PlatformSpu;
import com.hcsummercamp.fdkdainaclient.db.tables.Seller;
import com.hcsummercamp.fdkdainaclient.db.tables.SellerFetchOrder;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdkForwarder4 extends SchemaImpl {

    private static final long serialVersionUID = -478913482;

    /**
     * The reference instance of <code>fdk_forwarder4</code>
     */
    public static final FdkForwarder4 FDK_FORWARDER4 = new FdkForwarder4();

    /**
     * 代拿市场档口商户信息表
     */
    public final BaseBusinessInfo BASE_BUSINESS_INFO = com.hcsummercamp.fdkdainaclient.db.tables.BaseBusinessInfo.BASE_BUSINESS_INFO;

    /**
     * 系统规格|郑保乐|2021-06-08
     */
    public final PlatformSku PLATFORM_SKU = com.hcsummercamp.fdkdainaclient.db.tables.PlatformSku.PLATFORM_SKU;

    /**
     * 系统货品|郑保乐|2021-06-08
     */
    public final PlatformSpu PLATFORM_SPU = com.hcsummercamp.fdkdainaclient.db.tables.PlatformSpu.PLATFORM_SPU;

    /**
     * 销售商表
     */
    public final Seller SELLER = com.hcsummercamp.fdkdainaclient.db.tables.Seller.SELLER;

    /**
     * 代拿子单，对应销端小标签|郑保乐|2021-06-08
     */
    public final SellerFetchOrder SELLER_FETCH_ORDER = com.hcsummercamp.fdkdainaclient.db.tables.SellerFetchOrder.SELLER_FETCH_ORDER;

    /**
     * No further instances allowed
     */
    private FdkForwarder4() {
        super("fdk_forwarder4", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            BaseBusinessInfo.BASE_BUSINESS_INFO,
            PlatformSku.PLATFORM_SKU,
            PlatformSpu.PLATFORM_SPU,
            Seller.SELLER,
            SellerFetchOrder.SELLER_FETCH_ORDER);
    }
}
